"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var express_1 = require("express");
var Server = (function () {
    function Server() {
        this._app = express();
    }
    Object.defineProperty(Server.prototype, "app", {
        get: function () {
            return this._app;
        },
        enumerable: true,
        configurable: true
    });
    Server.prototype.addControllers = function (controllers, customRouterLib, showLog) {
        var _this = this;
        var ctlrInstances = [];
        if (controllers instanceof Array) {
            ctlrInstances = controllers;
        }
        else {
            ctlrInstances.push(controllers);
        }
        var count = 0;
        var routerLib = customRouterLib || express_1.Router;
        ctlrInstances.forEach(function (controller) {
            if (controller && controller.controllerBasePath) {
                var router = _this.getRouter(controller, routerLib);
                _this.app.use(controller.controllerBasePath, router);
                count++;
            }
        });
        if (showLog) {
            var s = count === 1 ? ' controller' : ' controllers';
            console.log(count + s + ' configured.');
        }
    };
    Server.prototype.getRouter = function (controller, routerLib) {
        var router = routerLib();
        var prototype = controller.__proto__.__proto__;
        var _loop_1 = function (member) {
            if (prototype.hasOwnProperty(member)) {
                var route = controller[member];
                if (route && route.overnightRouteProperties) {
                    var _a = route.overnightRouteProperties, middleware = _a.middleware, httpVerb = _a.httpVerb, path = _a.path;
                    var callBack = function (req, res, next) {
                        return controller[member](req, res, next);
                    };
                    if (middleware) {
                        router[httpVerb](path, middleware, callBack);
                    }
                    else {
                        router[httpVerb](path, callBack);
                    }
                }
            }
        };
        for (var member in prototype) {
            _loop_1(member);
        }
        return router;
    };
    return Server;
}());
exports.Server = Server;
//# sourceMappingURL=Server.js.map